import { Driver } from "neo4j-driver";
import { DocumentNode, GraphQLSchema } from "graphql";
import { IExecutableSchemaDefinition } from "@graphql-tools/schema";
import type { DriverConfig } from "../types";
import Node from "./Node";
export interface Neo4jGraphQLJWT {
    secret: string;
    noVerify?: string;
    rolesPath?: string;
}
export interface Neo4jGraphQLConfig {
    driverConfig?: DriverConfig;
    jwt?: Neo4jGraphQLJWT;
    enableRegex?: boolean;
}
export interface Neo4jGraphQLConstructor extends IExecutableSchemaDefinition {
    config?: Neo4jGraphQLConfig;
    driver?: Driver;
}
declare class Neo4jGraphQL {
    schema: GraphQLSchema;
    nodes: Node[];
    document: DocumentNode;
    private driver?;
    config?: Neo4jGraphQLConfig;
    constructor(input: Neo4jGraphQLConstructor);
    private createWrappedSchema;
    checkNeo4jCompat(input?: {
        driver?: Driver;
        driverConfig?: DriverConfig;
    }): Promise<void>;
}
export default Neo4jGraphQL;
//# sourceMappingURL=Neo4jGraphQL.d.ts.map