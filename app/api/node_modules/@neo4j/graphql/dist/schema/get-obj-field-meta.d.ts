import { EnumTypeDefinitionNode, InterfaceTypeDefinitionNode, ObjectTypeDefinitionNode, ScalarTypeDefinitionNode, UnionTypeDefinitionNode } from "graphql";
import { RelationField, CypherField, PrimitiveField, BaseField, CustomEnumField, CustomScalarField, UnionField, InterfaceField, ObjectField, DateTimeField, PointField } from "../types";
interface ObjectFields {
    relationFields: RelationField[];
    primitiveFields: PrimitiveField[];
    cypherFields: CypherField[];
    scalarFields: CustomScalarField[];
    enumFields: CustomEnumField[];
    unionFields: UnionField[];
    interfaceFields: InterfaceField[];
    objectFields: ObjectField[];
    dateTimeFields: DateTimeField[];
    pointFields: PointField[];
    ignoredFields: BaseField[];
}
declare function getObjFieldMeta({ obj, objects, interfaces, scalars, unions, enums, }: {
    obj: ObjectTypeDefinitionNode | InterfaceTypeDefinitionNode;
    objects: ObjectTypeDefinitionNode[];
    interfaces: InterfaceTypeDefinitionNode[];
    unions: UnionTypeDefinitionNode[];
    scalars: ScalarTypeDefinitionNode[];
    enums: EnumTypeDefinitionNode[];
}): ObjectFields;
export default getObjFieldMeta;
//# sourceMappingURL=get-obj-field-meta.d.ts.map