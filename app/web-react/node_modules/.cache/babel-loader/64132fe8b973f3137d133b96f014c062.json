{"ast":null,"code":"import _objectSpread from \"/Users/alexwoolford/PycharmProjects/supply-chain-graph/app/web-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/alexwoolford/PycharmProjects/supply-chain-graph/app/web-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/alexwoolford/PycharmProjects/supply-chain-graph/app/web-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/alexwoolford/PycharmProjects/supply-chain-graph/app/web-react/src/components/UserList.js\",\n    _templateObject,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Table, TableBody, TableCell, TableHead, TableRow, Tooltip, Paper, TableSortLabel, TextField } from '@material-ui/core';\nimport Title from './Title';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  root: {\n    maxWidth: 700,\n    marginTop: theme.spacing(3),\n    overflowX: 'auto',\n    margin: 'auto'\n  },\n  table: {\n    minWidth: 700\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    minWidth: 300\n  }\n});\n\nconst GET_USER = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query usersPaginateQuery(\\n    $first: Int\\n    $offset: Int\\n    $orderBy: [UserSort]\\n    $filter: UserWhere\\n  ) {\\n    users(\\n      options: { limit: $first, skip: $offset, sort: $orderBy }\\n      where: $filter\\n    ) {\\n      id: userId\\n      name\\n      avgStars\\n      numReviews\\n    }\\n  }\\n\"])));\n\nfunction UserList(props) {\n  _s();\n\n  const classes = props.classes;\n\n  const _React$useState = React.useState('ASC'),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        order = _React$useState2[0],\n        setOrder = _React$useState2[1];\n\n  const _React$useState3 = React.useState('name'),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        orderBy = _React$useState4[0],\n        setOrderBy = _React$useState4[1];\n\n  const _React$useState5 = React.useState(0),\n        _React$useState6 = _slicedToArray(_React$useState5, 1),\n        page = _React$useState6[0];\n\n  const _React$useState7 = React.useState(10),\n        _React$useState8 = _slicedToArray(_React$useState7, 1),\n        rowsPerPage = _React$useState8[0];\n\n  const _React$useState9 = React.useState({\n    usernameFilter: ''\n  }),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        filterState = _React$useState10[0],\n        setFilterState = _React$useState10[1];\n\n  const getFilter = () => {\n    return filterState.usernameFilter.length > 0 ? {\n      name_CONTAINS: filterState.usernameFilter\n    } : {};\n  };\n\n  const _useQuery = useQuery(GET_USER, {\n    variables: {\n      first: rowsPerPage,\n      offset: rowsPerPage * page,\n      orderBy: {\n        [orderBy]: order\n      },\n      filter: getFilter()\n    }\n  }),\n        loading = _useQuery.loading,\n        data = _useQuery.data,\n        error = _useQuery.error;\n\n  const handleSortRequest = property => {\n    const newOrderBy = property;\n    let newOrder = 'DESC';\n\n    if (orderBy === property && order === 'DESC') {\n      newOrder = 'ASC';\n    }\n\n    setOrder(newOrder);\n    setOrderBy(newOrderBy);\n  };\n\n  const handleFilterChange = filterName => event => {\n    const val = event.target.value;\n    setFilterState(oldFilterState => _objectSpread(_objectSpread({}, oldFilterState), {}, {\n      [filterName]: val\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"User List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"search\",\n      label: \"User Name Contains\",\n      className: classes.textField,\n      value: filterState.usernameFilter,\n      onChange: handleFilterChange('usernameFilter'),\n      margin: \"normal\",\n      variant: \"outlined\",\n      type: \"text\",\n      InputProps: {\n        className: classes.input\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), loading && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }, this), error && !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }, this), data && !loading && !error && /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            sortDirection: orderBy === 'name' ? order.toLowerCase() : false,\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Sort\",\n              placement: \"bottom-start\",\n              enterDelay: 300,\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: orderBy === 'name',\n                direction: order.toLowerCase(),\n                onClick: () => handleSortRequest('name'),\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)\n          }, \"name\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Average Stars\"\n          }, \"avgStars\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Number of Reviews\"\n          }, \"numReviews\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: data.users.map(n => {\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: n.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: n.avgStars ? n.avgStars.toFixed(2) : '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: n.numReviews\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this)]\n          }, n.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserList, \"DKNYp9Et/9hQ4AAnBHeLTt3Krzg=\", false, function () {\n  return [useQuery];\n});\n\n_c = UserList;\nexport default withStyles(styles)(UserList);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/alexwoolford/PycharmProjects/supply-chain-graph/app/web-react/src/components/UserList.js"],"names":["React","useQuery","gql","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Tooltip","Paper","TableSortLabel","TextField","Title","styles","theme","root","maxWidth","marginTop","spacing","overflowX","margin","table","minWidth","textField","marginLeft","marginRight","GET_USER","UserList","props","classes","useState","order","setOrder","orderBy","setOrderBy","page","rowsPerPage","usernameFilter","filterState","setFilterState","getFilter","length","name_CONTAINS","variables","first","offset","filter","loading","data","error","handleSortRequest","property","newOrderBy","newOrder","handleFilterChange","filterName","event","val","target","value","oldFilterState","className","input","toLowerCase","users","map","n","name","avgStars","toFixed","numReviews","id"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SACEC,KADF,EAEEC,SAFF,EAGEC,SAHF,EAIEC,SAJF,EAKEC,QALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,cARF,EASEC,SATF,QAUO,mBAVP;AAYA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,KAAY;AACzBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,GADN;AAEJC,IAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CAFP;AAGJC,IAAAA,SAAS,EAAE,MAHP;AAIJC,IAAAA,MAAM,EAAE;AAJJ,GADmB;AAOzBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GAPkB;AAUzBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAEV,KAAK,CAACI,OAAN,CAAc,CAAd,CADH;AAETO,IAAAA,WAAW,EAAEX,KAAK,CAACI,OAAN,CAAc,CAAd,CAFJ;AAGTI,IAAAA,QAAQ,EAAE;AAHD;AAVc,CAAZ,CAAf;;AAiBA,MAAMI,QAAQ,GAAGzB,GAAH,wXAAd;;AAmBA,SAAS0B,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAAA,QACfC,OADe,GACHD,KADG,CACfC,OADe;;AAAA,0BAEG9B,KAAK,CAAC+B,QAAN,CAAe,KAAf,CAFH;AAAA;AAAA,QAEhBC,KAFgB;AAAA,QAETC,QAFS;;AAAA,2BAGOjC,KAAK,CAAC+B,QAAN,CAAe,MAAf,CAHP;AAAA;AAAA,QAGhBG,OAHgB;AAAA,QAGPC,UAHO;;AAAA,2BAIRnC,KAAK,CAAC+B,QAAN,CAAe,CAAf,CAJQ;AAAA;AAAA,QAIhBK,IAJgB;;AAAA,2BAKDpC,KAAK,CAAC+B,QAAN,CAAe,EAAf,CALC;AAAA;AAAA,QAKhBM,WALgB;;AAAA,2BAMerC,KAAK,CAAC+B,QAAN,CAAe;AAAEO,IAAAA,cAAc,EAAE;AAAlB,GAAf,CANf;AAAA;AAAA,QAMhBC,WANgB;AAAA,QAMHC,cANG;;AAQvB,QAAMC,SAAS,GAAG,MAAM;AACtB,WAAOF,WAAW,CAACD,cAAZ,CAA2BI,MAA3B,GAAoC,CAApC,GACH;AAAEC,MAAAA,aAAa,EAAEJ,WAAW,CAACD;AAA7B,KADG,GAEH,EAFJ;AAGD,GAJD;;AARuB,oBAcUrC,QAAQ,CAAC0B,QAAD,EAAW;AAClDiB,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAER,WADE;AAETS,MAAAA,MAAM,EAAET,WAAW,GAAGD,IAFb;AAGTF,MAAAA,OAAO,EAAE;AAAE,SAACA,OAAD,GAAWF;AAAb,OAHA;AAITe,MAAAA,MAAM,EAAEN,SAAS;AAJR;AADuC,GAAX,CAdlB;AAAA,QAcfO,OAde,aAcfA,OAde;AAAA,QAcNC,IAdM,aAcNA,IAdM;AAAA,QAcAC,KAdA,aAcAA,KAdA;;AAuBvB,QAAMC,iBAAiB,GAAIC,QAAD,IAAc;AACtC,UAAMC,UAAU,GAAGD,QAAnB;AACA,QAAIE,QAAQ,GAAG,MAAf;;AAEA,QAAIpB,OAAO,KAAKkB,QAAZ,IAAwBpB,KAAK,KAAK,MAAtC,EAA8C;AAC5CsB,MAAAA,QAAQ,GAAG,KAAX;AACD;;AAEDrB,IAAAA,QAAQ,CAACqB,QAAD,CAAR;AACAnB,IAAAA,UAAU,CAACkB,UAAD,CAAV;AACD,GAVD;;AAYA,QAAME,kBAAkB,GAAIC,UAAD,IAAiBC,KAAD,IAAW;AACpD,UAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAzB;AAEApB,IAAAA,cAAc,CAAEqB,cAAD,oCACVA,cADU;AAEb,OAACL,UAAD,GAAcE;AAFD,MAAD,CAAd;AAID,GAPD;;AASA,sBACE,QAAC,KAAD;AAAO,IAAA,SAAS,EAAE5B,OAAO,CAACd,IAA1B;AAAA,4BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AACE,MAAA,EAAE,EAAC,QADL;AAEE,MAAA,KAAK,EAAC,oBAFR;AAGE,MAAA,SAAS,EAAEc,OAAO,CAACN,SAHrB;AAIE,MAAA,KAAK,EAAEe,WAAW,CAACD,cAJrB;AAKE,MAAA,QAAQ,EAAEiB,kBAAkB,CAAC,gBAAD,CAL9B;AAME,MAAA,MAAM,EAAC,QANT;AAOE,MAAA,OAAO,EAAC,UAPV;AAQE,MAAA,IAAI,EAAC,MARP;AASE,MAAA,UAAU,EAAE;AACVO,QAAAA,SAAS,EAAEhC,OAAO,CAACiC;AADT;AATd;AAAA;AAAA;AAAA;AAAA,YAFF,EAeGf,OAAO,IAAI,CAACE,KAAZ,iBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfxB,EAgBGA,KAAK,IAAI,CAACF,OAAV,iBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBxB,EAiBGC,IAAI,IAAI,CAACD,OAAT,IAAoB,CAACE,KAArB,iBACC,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEpB,OAAO,CAACR,KAA1B;AAAA,8BACE,QAAC,SAAD;AAAA,+BACE,QAAC,QAAD;AAAA,kCACE,QAAC,SAAD;AAEE,YAAA,aAAa,EAAEY,OAAO,KAAK,MAAZ,GAAqBF,KAAK,CAACgC,WAAN,EAArB,GAA2C,KAF5D;AAAA,mCAIE,QAAC,OAAD;AAAS,cAAA,KAAK,EAAC,MAAf;AAAsB,cAAA,SAAS,EAAC,cAAhC;AAA+C,cAAA,UAAU,EAAE,GAA3D;AAAA,qCACE,QAAC,cAAD;AACE,gBAAA,MAAM,EAAE9B,OAAO,KAAK,MADtB;AAEE,gBAAA,SAAS,EAAEF,KAAK,CAACgC,WAAN,EAFb;AAGE,gBAAA,OAAO,EAAE,MAAMb,iBAAiB,CAAC,MAAD,CAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJF,aACM,MADN;AAAA;AAAA;AAAA;AAAA,kBADF,eAeE,QAAC,SAAD;AAAA;AAAA,aAAe,UAAf;AAAA;AAAA;AAAA;AAAA,kBAfF,eAgBE,QAAC,SAAD;AAAA;AAAA,aAAe,YAAf;AAAA;AAAA;AAAA;AAAA,kBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAqBE,QAAC,SAAD;AAAA,kBACGF,IAAI,CAACgB,KAAL,CAAWC,GAAX,CAAgBC,CAAD,IAAO;AACrB,8BACE,QAAC,QAAD;AAAA,oCACE,QAAC,SAAD;AAAW,cAAA,SAAS,EAAC,IAArB;AAA0B,cAAA,KAAK,EAAC,KAAhC;AAAA,wBACGA,CAAC,CAACC;AADL;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,SAAD;AAAA,wBACGD,CAAC,CAACE,QAAF,GAAaF,CAAC,CAACE,QAAF,CAAWC,OAAX,CAAmB,CAAnB,CAAb,GAAqC;AADxC;AAAA;AAAA;AAAA;AAAA,oBAJF,eAOE,QAAC,SAAD;AAAA,wBAAYH,CAAC,CAACI;AAAd;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA,aAAeJ,CAAC,CAACK,EAAjB;AAAA;AAAA;AAAA;AAAA,kBADF;AAWD,SAZA;AADH;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2DD;;GAvGQ5C,Q;UAc0B3B,Q;;;KAd1B2B,Q;AAyGT,eAAezB,UAAU,CAACW,MAAD,CAAV,CAAmBc,QAAnB,CAAf","sourcesContent":["import React from 'react'\nimport { useQuery, gql } from '@apollo/client'\nimport { withStyles } from '@material-ui/core/styles'\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Paper,\n  TableSortLabel,\n  TextField,\n} from '@material-ui/core'\n\nimport Title from './Title'\n\nconst styles = (theme) => ({\n  root: {\n    maxWidth: 700,\n    marginTop: theme.spacing(3),\n    overflowX: 'auto',\n    margin: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    minWidth: 300,\n  },\n})\n\nconst GET_USER = gql`\n  query usersPaginateQuery(\n    $first: Int\n    $offset: Int\n    $orderBy: [UserSort]\n    $filter: UserWhere\n  ) {\n    users(\n      options: { limit: $first, skip: $offset, sort: $orderBy }\n      where: $filter\n    ) {\n      id: userId\n      name\n      avgStars\n      numReviews\n    }\n  }\n`\n\nfunction UserList(props) {\n  const { classes } = props\n  const [order, setOrder] = React.useState('ASC')\n  const [orderBy, setOrderBy] = React.useState('name')\n  const [page] = React.useState(0)\n  const [rowsPerPage] = React.useState(10)\n  const [filterState, setFilterState] = React.useState({ usernameFilter: '' })\n\n  const getFilter = () => {\n    return filterState.usernameFilter.length > 0\n      ? { name_CONTAINS: filterState.usernameFilter }\n      : {}\n  }\n\n  const { loading, data, error } = useQuery(GET_USER, {\n    variables: {\n      first: rowsPerPage,\n      offset: rowsPerPage * page,\n      orderBy: { [orderBy]: order },\n      filter: getFilter(),\n    },\n  })\n\n  const handleSortRequest = (property) => {\n    const newOrderBy = property\n    let newOrder = 'DESC'\n\n    if (orderBy === property && order === 'DESC') {\n      newOrder = 'ASC'\n    }\n\n    setOrder(newOrder)\n    setOrderBy(newOrderBy)\n  }\n\n  const handleFilterChange = (filterName) => (event) => {\n    const val = event.target.value\n\n    setFilterState((oldFilterState) => ({\n      ...oldFilterState,\n      [filterName]: val,\n    }))\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <Title>User List</Title>\n      <TextField\n        id=\"search\"\n        label=\"User Name Contains\"\n        className={classes.textField}\n        value={filterState.usernameFilter}\n        onChange={handleFilterChange('usernameFilter')}\n        margin=\"normal\"\n        variant=\"outlined\"\n        type=\"text\"\n        InputProps={{\n          className: classes.input,\n        }}\n      />\n      {loading && !error && <p>Loading...</p>}\n      {error && !loading && <p>Error</p>}\n      {data && !loading && !error && (\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell\n                key=\"name\"\n                sortDirection={orderBy === 'name' ? order.toLowerCase() : false}\n              >\n                <Tooltip title=\"Sort\" placement=\"bottom-start\" enterDelay={300}>\n                  <TableSortLabel\n                    active={orderBy === 'name'}\n                    direction={order.toLowerCase()}\n                    onClick={() => handleSortRequest('name')}\n                  >\n                    Name\n                  </TableSortLabel>\n                </Tooltip>\n              </TableCell>\n              <TableCell key=\"avgStars\">Average Stars</TableCell>\n              <TableCell key=\"numReviews\">Number of Reviews</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.users.map((n) => {\n              return (\n                <TableRow key={n.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {n.name}\n                  </TableCell>\n                  <TableCell>\n                    {n.avgStars ? n.avgStars.toFixed(2) : '-'}\n                  </TableCell>\n                  <TableCell>{n.numReviews}</TableCell>\n                </TableRow>\n              )\n            })}\n          </TableBody>\n        </Table>\n      )}\n    </Paper>\n  )\n}\n\nexport default withStyles(styles)(UserList)\n"]},"metadata":{},"sourceType":"module"}